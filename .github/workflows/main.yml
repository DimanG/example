name: FirstProgram
on:
  push:
    branches: [master]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Крок 1: Клонування репозиторію
      - name: Checkout repository
        uses: actions/checkout@v3
     # - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
            # Крок 3: Збираємо артефакт через Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests
          # Крок 4: Завантажуємо JAR-файл як артефакт
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
         name: example-jar
         path: /app/example.jar
         #path: ./out/artifacts/example_jar/example.jar

          # Крок 5: Логін в GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

          # Крок 6: Створення Docker образу
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.actor }}/myapp:${{ github.sha }} .
        

      # Крок 7: Публікація Docker образу в GitHub Container Registry
      - name: Push Docker image
        run: docker push ghcr.io/${{ github.actor }}/myapp:${{ github.sha }}
      #- run: mkdir staging && cp out/artifacts/example_jar/*.jar staging
      #- run: java -jar  out/artifacts/example_jar/*.jar
      #- uses: actions/upload-artifact@v4
      #  with:
      #    name: Package
      #    path: staging